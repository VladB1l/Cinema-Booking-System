services:
  db:
    image: postgres
    container_name: db-sql
    environment:
      POSTGRES_PASSWORD: password123
      POSTGRES_USER: user123
      POSTGRES_DB: Cinema
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./images:/images

  db-NoSql:
    image: mongo
    container_name: db-nosql
    environment:
      MONGO_INITDB_ROOT_USERNAME: user123
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: Cinema
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js

  api:
    build: ./api
    image: lab4-1-api
    container_name: api
    depends_on:
      - db
      - db-NoSql
    volumes:
      - ./api:/app
      - /app/node_modules
    ports:
      - 3002:3000

  web1:
    build: ./web
    container_name: react-1
    volumes:
      - ./web:/app
      - /app/node_modules
    ports:
      - 3000:3000
    environment:
      - WATCHPACK_POLLING=true

  web2:
    build: ./web-nosql
    container_name: react-2
    depends_on:
      - api
    volumes:
      - ./web-nosql:/app
      - /app/node_modules
    ports:
      - 3001:3000
    environment:
      - WATCHPACK_POLLING=true

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  message-consumer:
    build: ./api
    container_name: message-consumer
    command: nodemon -L messageConsumer.js
    depends_on:
      - rabbitmq
      - api
